// Leetcode 136 数组中找出只出现一次的元素

// 枚举法
int main()
{
	int arr[] = {1,2,3,4,5,1,2,3,4,8};
	int sz = sizeof(arr)/sizeof(arr[0]);
	
	int flag = 0;
	for(int i = 0; i < sz; i++)
	{
		int count = 0;
		for(int j = 0; j < sz; j++)
		{
			if(arr[i] == arr[j] && j != i)
				count++;
		}
		if(count == 0)
		{
			printf(" %d\n ", arr[i]);
			flag = 1;
		}
	}
	if(flag == 0)
	{
		printf("未找到只出现一次的元素！\n");
	}
   return 0;
}


// 按位异或
int main()
{
	int arr[] = {1,2,3,4,5,1,2,3,4, 5};
	int sz = sizeof(arr)/sizeof(arr[0]);
	
	int flag = 0;
	int ret = 0;
	for(int i = 0; i < sz; i++)
	{
		ret = ret ^ arr[i];
	}
	if(ret == 0)
	{
		printf("未找到只出现一次的元素！\n");
	}
	else
	{
		printf("%d\n", ret);
	}
   return 0;
}


// 扫雷

#define Row 9
#define Col 9
#define Rows Row+2
#define Cols Col+2


void DisplayBoard(char board[Rows][Cols], int row, int col)
{
	int i,j;
	for(i = 0; i <= col; i++)
	{
		printf("%d ", i);
	}
	printf("\n");
	for(i = 1; i <= row; i++)
	{
		printf("%d ", i);
		for(j = 1; j <= col; j++)
		{
			printf("%c ", board[i][j]);
		}
		printf("\n");
	}
}

void InitBoard(char board[Rows][Cols], int rows, int cols, char set)
{
	int i, j;
	for(i = 0; i < rows; i++)
	{
		for(j = 0; j < cols; j++)
		{
			board[i][j] = set;
		}
	}
}
void game()
{
	char mine[Rows][Cols] = { 0 };
	char show[Rows][Cols] = { 0 };
	InitBoard(mine, Rows, Cols, '0');
	InitBoard(show, Rows, Cols, '#');
	
	DisplayBoard(mine, Row, Col);
	DisplayBoard(show, Row, Col);
}
void menu()
{
	printf("*************************\n");
	printf("******  1. play   *******\n");
	printf("******  0. exit   *******\n");
	printf("*************************\n");
}

void text()
{
	int input = 1;
	do
	{
		menu();
		scanf("%d:", &input);
		switch(input)
		{
			case 1:
				{
					game();
					break;
				}
			case 0:
				{
					printf("游戏结束！\n");
					break;
				}
			default:
				printf("选择错误，请重新选择!\n");
				break;
		}
	}while(0);
}
int main()
{
	text();
   return 0;
}