// 求素数
int main()
{
	int count;
	int j;
	for(int i=101; i<201; i+=2){
		for(j=2; j<=i/2; j++){
			if(i%j==0)
				break;
		}
		if(j>i/2){
			count++;
			printf("%d ", i);
		}
	}
	printf("\n%d", count);
}




// 数9
int main()
{
	int count;
	for(int i=0; i<100; i++){
		if(i%10==9){
			printf("%d ", i);
			count++;
		}
		if(i/10==9){
			printf("%d ", i);
			count++;
		}
	}
	printf("\n%d", count);

}



// 求分数之和
int main()
{
	double count = 0.0;
	double num = 1.0;
	for(int i=1; i<101; i++){
		count += num * 1.0/i;
		num = -num;
		//printf("%lf ", num);
	}
	printf("%lf ", count);
}



// 输出最大值
int main()
{
	int arr[] = {-1,-2,-3,-4,-5,-6,-7,-8,-9,0};
	int max = arr[0];
	int sz = sizeof(arr)/sizeof(arr[0]);
	for(int i=0; i<sz; i++){
		if(max<arr[i])
			max = arr[i];
	}
	printf("%d ", max);
}



// 乘法口诀表
int main()
{
	for(int i=1; i<10; i++){
		for(int j=1; j<=i; j++){
			printf("%d*%d=%-2d  ", i, j, i*j);
		}
		printf("\n");
	}
}




// 二分查找
int main()
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int num = 2;
	int left = 0;
	int right = sizeof(arr)/sizeof(arr[0])-1;
	int sz =sizeof(arr)/sizeof(arr[0]);
	int mid;
	while(left<=right){
		mid = (left+right)/2;
		if(arr[mid] == num){
			printf("下标为：%d\n", mid);
			break;
		}
		else if(arr[mid]<num) left = mid+1;
		else right = mid-1;
	}
	if(left>right)
		printf("没找到。。");
}