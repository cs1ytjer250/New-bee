
// 打印一个的数的二进制位中奇数位和偶数位
void print(int m)
{
	int i = 0;
	printf("奇数位：");
	for(i = 30; i >= 0; i -= 2)
	{
		printf("%d " , (m >> i) & 1);
	}
	printf("\n");
	printf("偶数位：");
	for(i = 31; i >= 1; i -= 2)
	{
		printf("%d ", (m >> i) & 1);
	}
	printf("\n");
}

int main()
{
	int a = 10;
	print(a);
   return 0;
}




void print(int *p, int sz)
{
	int i = 0;
	for(i = 0; i < sz; i++)
	{
		printf("%d\n", *p+i);
	}
}

int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9};
	int sz = sizeof(arr) / sizeof(arr[0]);
	print(arr, sz);
   return 0;
}




int Fun(int n)
{
	if(n == 5)
	{
		return 2;
	}
	else 
	{
		return 2 * Fun(n + 1);
	}
}

int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int num = 2;
	printf("%d\n", Fun(num));
   return 0;
}





void Reverse_string(char arr[])
{
	int left = 0;
	int right = strlen(arr)-1;
	while(left < right)
	{
		int temp = arr[left];
		arr[left] = arr[right];
		arr[right] = temp;
		left ++;
		right --;

	}

}

int main()
{
	char arr[] = "abcdef";
	Reverse_string(arr);
	printf("%s ", arr);
   return 0;
}




int my_strlen(char *str)
{
	int count;
	while(*str != '\0')
	{
		count ++;
		str++;
	}
	return count;
}
void Reverse_string(char arr[])
{
	int left = 0;
	int right = my_strlen(arr)-1;
	while(left < right)
	{
		int temp = arr[left];
		arr[left] = arr[right];
		arr[right] = temp;
		left ++;
		right --;

	}

}
int main()
{
	char arr[] = "abcdef";
	Reverse_string(arr);
	printf("%s ", arr);
   return 0;
}