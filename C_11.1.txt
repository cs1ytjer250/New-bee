int main()
{
	int n = 9;
	float *pfloat = (float *)&n;
	printf("%d\n", n);
	printf("%f\n", *pfloat); //  0
	
	*pfloat = 9.0;
	printf("%d\n", n); // 极大
	printf("%f\n", *pfloat);
   return 0;
}

void test(int arr[])
{
	int sz = sizeof(arr) / sizeof(arr[0]);
	printf("%d\n", sz);
}
int main()
{
	int arr[10] = {0};
	test(arr);
   return 0;
}



int main()
{
	char arr[] = "abcdef";
	char * p = arr;
	char * pc = "esfgad";
	printf("%s\n", arr);
	printf("%s\n", p);
	printf("%c\n", *pc);
	printf("%s\n", pc);
   	return 0;
}


int main()
{
	const char *p = "abcdef";
	*p = "e";
	printf("%s\n",p);
   	return 0;
}



// 常量字符串，无法被修改，所以在内存中的地址唯一
int main()
{
	char arr1[] = "abcdef";
	char arr2[] = "abcdef";
	char *parr1 = "abcdef";
	char *parr2 = "abcdef";
	if(arr1 == arr2)
	{
		printf("hehe\n");
	}
	else
	{
		printf("haha\n");
	}


	if(parr1 == parr2)
	{
		printf("hehe\n");
	}
	else
	{
		printf("haha\n");
	}
	
	printf("%c\n", *parr1);
	printf("%c\n", *parr2);
	printf("%s\n", parr1);
	printf("%s\n", parr2);
   	return 0;
}



int main()
{
	int a = 10;
	int b = -1;
	int c = 12;
	int d = -20;
	int *arr[4] = {&a,&b,&c,&d};
	int i = 0;
	for(i = 0; i < 4; i++)
	{
		printf("%d\n", *arr[i]);
	}
   	return 0;
}




int main()
{
	int arr1[] = {1,2,3,4,5,6};
	int arr2[] = {2,3,4,5,6,7};
	int arr3[] = {3,4,5,6,7,8};
	int i = 0;
	int * parr[3] = {arr1, arr2, arr3};
	for(i = 0; i < 3; i++)
	{
		int j = 0;
		for(j = 0; j<5; j++)
		{
			printf("%d ", *(parr[i]+j));
		}
		printf("\n");
	}
   	return 0;
}


int main()
{
	char* arr[5];
	char* (*p)[5] = &arr;
   	return 0;
}



int main()
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int (*p)[] = &arr;
	int i = 0;
	for(i = 0; i < 10; i++)
	{
		printf("%d ", (*p)[i]);
	}
	printf("\n");
	for(i = 0; i < 10; i++)
	{
		printf("%d ", *(*p+i));
	}
   	return 0;
}



void print(int arr[3][5], int x, int y)
{
	int i = 0;
	int j = 0;
	for(i = 0; i < x; i++)
	{
		for(j = 0; j < y; j++)
		{
			printf("%d ",arr[i][j]);
		}
		printf("\n");
	}
}

void print2(int (*p)[5], int x, int y)
{
	int i = 0;
	int j = 0;
	for(i = 0; i < x; i++)
	{
		for(j = 0; j < y; j++)
		{
			printf("%d ", p[i][j]);
			printf("%d ", *((*p+i)+j));
			printf("%d ", (*(p+i))[j]);
		}
		printf("\n");
	}
}
int main()
{
	int arr[3][5] = {{1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7}};
	print(arr, 3, 5);
	print2(arr, 3, 5);
   	return 0;
}




int main()
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int i = 0;
	int *p = arr;
	for(i = 0; i < 10; i++)
	{
		// 四者等价， p[i] == arr[i] == *p+i == *arr+i
		printf("%d ", p[i]);
		printf("%d ", arr[i]);
		printf("%d ", *arr+i);
		printf("%d ", *p+i);
	}
   	return 0;
}