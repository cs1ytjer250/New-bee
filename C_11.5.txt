int Add(int x, int y)
{
	return x + y;
}

int main()
{
	int arr[10] = {0};
	int (*pa)[10] = &arr;
	int * arr2 [10];
	int *(*parr)[10] = &arr2;
	
	int (*parr2[4])(int, int) = {};
	int (*(*pparr3)[4])(int, int) = &parr2;
	int (*pf)(int, int) = Add;
	printf("%d\n", pf(3,5));
	printf("%d\n", (*pf)(5,12));
   	return 0;
}







void Bublle_sort(int arr[], int sz)
{
	int tmp = 0;
	int i = 0;
	int j = 0;
	for(i = 0; i < sz-1; i++)
	{
		for(j = 0; j < sz-1-i; j++)
		{
			if(arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
}

void Reverse(int arr[], int sz)
{
	int i = 0;
	int tmp = 0;
	int right = sz-1;
	for(i = 0;i < sz/2; i++)
	{
		tmp = arr[i];
		arr[i] = arr[right];
		arr[right] = tmp;
		right --;
	}
}

int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int sz2 = sizeof(arr2) / sizeof(arr[1]);
	Reverse(arr, sz);
	Bublle_sort(arr, sz);
	int i = 0;
	for(i = 0; i < sz; i++)
	{
		printf("%d\n", arr[i]);
	}
   	return 0;
}







#include <stdio.h>
#include <stdlib.h>

void Bublle_sort(int arr[], int sz)
{
	int tmp = 0;
	int i = 0;
	int j = 0;
	for(i = 0; i < sz-1; i++)
	{
		for(j = 0; j < sz-1-i; j++)
		{
			if(arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
}

typedef struct Stu
{
	char name[10];
	int age;
}Stu;

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

void test1()
{
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz2 = sizeof(arr2) / sizeof(arr2[1]);
	int i = 0;
	qsort(arr2, sz2, sizeof(arr2[0]), cmp_int);
	for(i = 0; i < sz2; i++)
	{
		printf("%d\n", arr2[i]);
	}
}
int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int sz2 = sizeof(arr2) / sizeof(arr[1]);
	int a = 10;
	char b = 'w';
	void *pv = &a;
	int (*parr)[10] = &arr;
	int i = 0;
	pv = &b;
	
	Stu s1[3] = {{"张三", 25}, {"李四", 35}, {"王五", 27}};
	test1();
	return 0;
}







void Bublle_sort(int arr[], int sz)
{
	int tmp = 0;
	int i = 0;
	int j = 0;
	for(i = 0; i < sz-1; i++)
	{
		for(j = 0; j < sz-1-i; j++)
		{
			if(arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
}

typedef struct Stu
{
	char name[10];
	int age;
}Stu;

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

int cmp_float(const void* e1, const void* e2)
{
	return *(float*)e1 - *(float*)e2;
}

void test1()
{
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz2 = sizeof(arr2) / sizeof(arr2[1]);
	int i = 0;
	qsort(arr2, sz2, sizeof(arr2[0]), cmp_int);
	for(i = 0; i < sz2; i++)
	{
		printf("%d\n", arr2[i]);
	}
}

void test2()
{
	float arr[10] = {10.0, 9.0,8.0,7.0,6.0,5.0,4.0,3.0,2.0,1.0};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	qsort(arr, sz, sizeof(arr[0]), cmp_float);
	for(i = 0; i < sz; i++)
	{
		printf("%lf\n", arr[i]);
	}
}

int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int sz2 = sizeof(arr2) / sizeof(arr[1]);
	int a = 10;
	char b = 'w';
	void *pv = &a;
	int (*parr)[10] = &arr;
	int i = 0;
	pv = &b;
	
	Stu s1[3] = {{"张三", 25}, {"李四", 35}, {"王五", 27}};
	test1();
	test2();
	return 0;
}






void Bublle_sort(int arr[], int sz)
{
	int tmp = 0;
	int i = 0;
	int j = 0;
	for(i = 0; i < sz-1; i++)
	{
		for(j = 0; j < sz-1-i; j++)
		{
			if(arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
}

typedef struct Stu
{
	char name[10];
	int age;
}Stu;

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

int cmp_float(const void* e1, const void* e2)
{
	if( *(float*)e1 == *(float*)e2)
		return 0;
	else if( *(float*)e1 > *(float*)e2)
		return 1;
	else
		return -1;
	//return ((int)(*(float*)e1 - *(float*)e2));
}

void test1()
{
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz2 = sizeof(arr2) / sizeof(arr2[1]);
	int i = 0;
	qsort(arr2, sz2, sizeof(arr2[0]), cmp_int);
	for(i = 0; i < sz2; i++)
	{
		printf("%d\n", arr2[i]);
	}
}

void test2()
{
	float arr[10] = {10.0, 9.0,8.0,7.0,6.0,5.0,4.0,3.0,2.0,1.0};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	qsort(arr, sz, sizeof(arr[0]), cmp_float);
	for(i = 0; i < sz; i++)
	{
		printf("%f\n", arr[i]);
	}
}

int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int sz2 = sizeof(arr2) / sizeof(arr[1]);
	int a = 10;
	char b = 'w';
	void *pv = &a;
	int (*parr)[10] = &arr;
	int i = 0;
	pv = &b;
	
	Stu s1[3] = {{"张三", 25}, {"李四", 35}, {"王五", 27}};
	test1();
	test2();
	return 0;
}








#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void Bublle_sort(int arr[], int sz)
{
	int tmp = 0;
	int i = 0;
	int j = 0;
	for(i = 0; i < sz-1; i++)
	{
		for(j = 0; j < sz-1-i; j++)
		{
			if(arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
}

typedef struct Stu
{
	char name[10];
	int age;
}Stu, *StuP;

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

int cmp_float(const void* e1, const void* e2)
{
	if( *(float*)e1 == *(float*)e2)
		return 0;
	else if( *(float*)e1 > *(float*)e2)
		return 1;
	else
		return -1;
	//return ((int)(*(float*)e1 - *(float*)e2));
}

int cmp_Stu_by_age(const void* e1, const void* e2)
{
	return ((StuP)e1)->age - ((StuP)e2)->age;
}


int cmp_Stu_by_name(const void* e1, const void* e2)
{
	return strcmp(((StuP)e1)->name, ((StuP)e2)->name);
}

void test1()
{
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz2 = sizeof(arr2) / sizeof(arr2[1]);
	int i = 0;
	qsort(arr2, sz2, sizeof(arr2[0]), cmp_int);
	for(i = 0; i < sz2; i++)
	{
		printf("%d\n", arr2[i]);
	}
}

void test2()
{
	float arr[10] = {10.0, 9.0,8.0,7.0,6.0,5.0,4.0,3.0,2.0,1.0};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	qsort(arr, sz, sizeof(arr[0]), cmp_float);
	for(i = 0; i < sz; i++)
	{
		printf("%f\n", arr[i]);
	}
}

void test3()
{
	Stu s1[3] = {{"张三", 25}, {"李四", 35}, {"王五", 27}};
	int sz = sizeof(s1) / sizeof(s1[0]);
	qsort(s1, sz, sizeof(s1[0]), cmp_Stu_by_age);
	qsort(s1, sz, sizeof(s1[0]), cmp_Stu_by_name);
}

int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
	int arr2[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int sz2 = sizeof(arr2) / sizeof(arr[1]);
	int a = 10;
	char b = 'w';
	void *pv = &a;
	int (*parr)[10] = &arr;
	int i = 0;
	pv = &b;
	
	test1();
	test2();
	test3();
	return 0;
}
 