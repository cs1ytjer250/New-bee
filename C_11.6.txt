#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Stu
{
	char name[10];
	int age;
}Stu, *StuP;

void swap(char *buf1, char *buf2, int width)
{
	int i = 0;
	for(i = 0; i < width; i++)
	{
		char tmp = *buf1;
		*buf1 = *buf2;
		*buf2 = tmp;
		buf1++;
		buf2++;
	}
}


void Bubble_sort(void* base, int sz, int width, int (*cmp)(void* e1, void* e2))
{
	int i = 0;
	int j = 0;
	for(i = 0; i < sz-1; i++)
	{
		for(j = 0; j < sz-1-i; j++)
		{
			if(cmp((char*)base + j * width, (char*)base + (j+1)*width) > 0)
			{
			   	swap((char*)base + j * width, (char*)base + (j+1)*width, width);
			}
		}
	}
}

int cmp_int(void *e1, void *e2)
{
	return *(int*)e1 - *(int*)e2;
}

int cmp_stu_by_age(void*e1, void*e2)
{
	return *(int*)e1 - *(int*)e2;
}

int cmp_stu_by_name(void* e1, void* e2)
{
	return strcmp(((StuP)e1)->name, ((StuP)e2)->name);
}
			   

void test1()
{
	int arr[10] = {10, 9,8,7,6,5,4,3,2,1};
	int sz = sizeof(arr) / sizeof(arr[0]);
	Bubble_sort(arr, sz, sizeof(arr[0]), cmp_int);
	int i = 0;
	for(i = 0; i < sz; i++)
	{
		printf("%d\n", arr[i]);
	}
}

void test2()
{
	Stu s1[3] = {{"zhangsan", 23}, {"lisi", 34}, {"wangwu", 28}};
	int sz = sizeof(s1) / sizeof(s1[0]);
	Bubble_sort(s1, sz, sizeof(s1[0]), cmp_stu_by_age);
}

void test3()
{
	Stu s1[3] = {{"zhangsan", 23}, {"lisi", 34}, {"wangwu", 28}};
	int sz = sizeof(s1) / sizeof(s1[0]);
	Bubble_sort(s1, sz, sizeof(s1[0]), cmp_stu_by_name);
}

int main()
{
	test1();
	test2();
	test3();
  	return 0;
}






int main()
{
	int a [] = {1,2,3,4};
	printf("%d\n", sizeof(a));  // 16
	printf("%d\n", sizeof(a + 0)); // 8
	printf("%d\n", sizeof(*a)); //  4
	printf("%d\n", sizeof(a + 1)); // 8
	printf("%d\n", sizeof(a[1])); // 4
	printf("%d\n", sizeof(&a)); // 8
	printf("%d\n", sizeof(*&a)); // 16
	printf("%d\n", sizeof(&a + 1)); // 4/8
	printf("%d\n", sizeof(&a[0])); // 4/8
	printf("%d\n", sizeof(&a[0] + 1)); // 4/8
	return 0;
}






int main()
{
	char arr[] = {'a', 'b', 'c', 'd', 'e', 'f'};
	printf("%d\n", sizeof(arr)); // 6
	printf("%d\n", sizeof(arr + 0)); // 8  只要是指针，不论是什么类型，都是4/8个字节
	printf("%d\n", sizeof(*arr)); // 1
	printf("%d\n", sizeof(arr[1])); // 1
	printf("%d\n", sizeof(&arr)); // 8
	printf("%d\n", sizeof(&arr + 1)); // 8
	printf("%d\n", sizeof(&arr[0] + 1)); // 8
	return 0;
}




int main()
{
	char arr[] = {'a', 'b', 'c', 'd', 'e', 'f'};
	printf("%d\n", sizeof(arr)); // 6
	printf("%d\n", sizeof(arr + 0)); // 8  只要是指针，不论是什么类型，都是4/8个字节
	printf("%d\n", sizeof(*arr)); // 1
	printf("%d\n", sizeof(arr[1])); // 1
	printf("%d\n", sizeof(&arr)); // 8
	printf("%d\n", sizeof(&arr + 1)); // 8
	printf("%d\n", sizeof(&arr[0] + 1)); // 8
	
	
	printf("%d\n", strlen(arr)); // 随机
	printf("%d\n", strlen(arr + 0)); // 随机  
	//printf("%d\n", strlen(*arr)); // 越界访问
	//printf("%d\n", strlen(arr[1])); // 越界访问
	printf("%d\n", strlen(&arr)); // 随机
	printf("%d\n", strlen(&arr + 1)); // 随机
	printf("%d\n", strlen(&arr[0] + 1)); // 随机
	return 0;
}